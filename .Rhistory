mutate (date = as.Date(variable, format = "%m/%d/%y")) %>%
select(-variable) %>%
rename(country = `Country/Region`, province = `Province/State`) %>%
group_by(country, date) %>%
summarize(value = sum(value))
conf_first <-
data_conf %>%
filter(value > START_CASES_NO) %>%
group_by(country) %>%
mutate(maxv = max(value)) %>%
top_n(-1, wt = date) %>%
select(-value) %>%
rename(date_first = date)
tests <- fread("tests.csv", header = TRUE) %>%
mutate(date = as.Date(date, format = "%d.%m.%y"))
conf <-
data_conf %>%
left_join(., conf_first) %>%
mutate(days = date-date_first) %>%
filter(days >=0) %>%
left_join(., population) %>%
mutate(value_per_1M = value/pop) %>%
#select(-date_first, -pop) %>%
left_join(., tests) %>%
select(-date)
View(conf %>% filter(tests>0))
library(data.table)
library(tidyverse)
url_conf <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"
build_data <- function(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include = c("Poland")){
population <- fread("API_SP.POP.TOTL_DS2_en_csv_v2_866861.csv", header = TRUE) %>%
select(`Country Name`, `2018`) %>%
rename(country = `Country Name`, pop = `2018`) %>%
mutate(pop = pop/1000000)
data_conf <-
fread(url_conf) %>%
melt(., id.vars = c(1,2,3,4)) %>%
mutate (date = as.Date(variable, format = "%m/%d/%y")) %>%
select(-variable) %>%
rename(country = `Country/Region`, province = `Province/State`) %>%
group_by(country, date) %>%
summarize(value = sum(value))
conf_first <-
data_conf %>%
filter(value > START_CASES_NO) %>%
group_by(country) %>%
mutate(maxv = max(value)) %>%
top_n(-1, wt = date) %>%
select(-value) %>%
rename(date_first = date)
tests <- fread("tests.csv", header = TRUE) %>%
mutate(date = as.Date(date, format = "%d.%m.%y"))
conf <-
data_conf %>%
left_join(., conf_first) %>%
mutate(days = date-date_first) %>%
filter(days >=0) %>%
left_join(., population) %>%
mutate(value_per_1M = value/pop) %>%
left_join(., tests) %>%
mutate(tests_per_1M = tests/pop) %>%
mutate(cases_per_test = tests/value) %>%
select(-date, -date_first, -pop)
conf_filtered <-
conf %>%
filter((maxv > MIN_CASES & maxv < MAX_CASES & country != "China") | country %in% countries_include) %>%
filter(value < CHART_MAX) %>%
mutate(maxv = ifelse(value == maxv, 1, 0))
return(conf_filtered)
}
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, log(value), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = log(value)), hjust = -.1) +
labs(y="Log(Number of cases)", x = "Days from patient 0") +
labs(title = "1.1 Log(Number of cases), Day 0 = 1 case", subtitle = "countries > 1000 + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19") +
theme(legend.position="none")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, log(value), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = log(value)), hjust = -.1) +
labs(y="Log(Number of cases)", x = "Days from patient 0") +
labs(title = "1.2 Log(Number of cases), Day 0 = 30 cases", subtitle = "countries > 1000 + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19") +
theme(legend.position="none")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include)
ggplot(conf_filtered, aes(days, value, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value), hjust = -.1) +
labs(y="Number of cases", x = "Days from patient 0") +
labs(title = "2.1 Number of cases, Day 0 = 1 case", subtitle = "countries > 1000 + Poland, crop at 10000") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include)
ggplot(conf_filtered, aes(days, value, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value), hjust = -.1) +
labs(y="Number of cases", x = "Days from patient 0") +
labs(title = "2.2 Number of cases, Day 0 = 30 cases", subtitle = "countries > 1000 + Poland, crop at 10000") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, value_per_1M, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value_per_1M), hjust = -.1) +
labs(y="Number of cases per 1M inhabitants", x = "Days from patient 0") +
labs(title = "3.1 Number of cases per 1M inhabitans, Day 0 = 1 case", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, value_per_1M, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value_per_1M), hjust = -.1) +
labs(y="Number of cases per 1M inhabitants", x = "Days from patient 0") +
labs(title = "3.2 Number of cases per 1M inhabitans, Day 0 = 30 cases", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, value_per_1M, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value_per_1M), hjust = -.1) +
labs(y="Number of cases per 1M inhabitants", x = "Days from patient 0") +
labs(title = "3.2 Number of cases per 1M inhabitans, Day 0 = 30 cases", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
View(conf_filtered)
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0)
View(conf_filtered)
View(conf_first)
View(conf_filtered)
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = days, y = cases_per_test), hjust = -.1) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "All countries") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = days, y = cases_per_test), hjust = -.1) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "All countries") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(log(tests_per_1M), log(cases_per_test), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = days, y = cases_per_test), hjust = -.1) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "All countries") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(log(tests_per_1M), log(cases_per_test), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = days, y = log(cases_per_test)), hjust = -.1) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "All countries") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(log(tests_per_1M), log(cases_per_test), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = log(tests_per_1M), y = log(cases_per_test)), hjust = -.1) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "All countries") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(log(tests_per_1M), log(cases_per_test), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = log(tests_per_1M), y = log(cases_per_test)), hjust = -.1) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), hjust = -.1) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19,ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), hjust = -.1, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), hjust = -.2, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -0.5, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -1.5, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -2.5, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "3.2 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
View(conf_filtered)
library(data.table)
library(tidyverse)
url_conf <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"
build_data <- function(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include = c("Poland")){
population <- fread("API_SP.POP.TOTL_DS2_en_csv_v2_866861.csv", header = TRUE) %>%
select(`Country Name`, `2018`) %>%
rename(country = `Country Name`, pop = `2018`) %>%
mutate(pop = pop/1000000)
data_conf <-
fread(url_conf) %>%
melt(., id.vars = c(1,2,3,4)) %>%
mutate (date = as.Date(variable, format = "%m/%d/%y")) %>%
select(-variable) %>%
rename(country = `Country/Region`, province = `Province/State`) %>%
group_by(country, date) %>%
summarize(value = sum(value))
conf_first <-
data_conf %>%
filter(value > START_CASES_NO) %>%
group_by(country) %>%
mutate(maxv = max(value)) %>%
top_n(-1, wt = date) %>%
select(-value) %>%
rename(date_first = date)
tests <- fread("tests.csv", header = TRUE) %>%
mutate(date = as.Date(date, format = "%d.%m.%y"))
conf <-
data_conf %>%
left_join(., conf_first) %>%
mutate(days = date-date_first) %>%
filter(days >=0) %>%
left_join(., population) %>%
mutate(value_per_1M = value/pop) %>%
left_join(., tests) %>%
mutate(tests_per_1M = tests/pop) %>%
mutate(cases_per_test = tests/value) %>%
select(-date, -date_first, -pop)
conf_filtered <-
conf %>%
filter((maxv > MIN_CASES & maxv < MAX_CASES & country != "China") | country %in% countries_include) %>%
filter(value < CHART_MAX) %>%
mutate(maxv = ifelse(value == maxv, 1, 0))
return(conf_filtered)
}
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, log(value), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = log(value)), hjust = -.1) +
labs(y="Log(Number of cases)", x = "Days from patient 0") +
labs(title = "1.1 Log(Number of cases), Day 0 = 1 case", subtitle = "countries > 1000 + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19") +
theme(legend.position="none")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, log(value), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = log(value)), hjust = -.1) +
labs(y="Log(Number of cases)", x = "Days from patient 0") +
labs(title = "1.2 Log(Number of cases), Day 0 = 30 cases", subtitle = "countries > 1000 + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19") +
theme(legend.position="none")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include)
ggplot(conf_filtered, aes(days, value, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value), hjust = -.1) +
labs(y="Number of cases", x = "Days from patient 0") +
labs(title = "2.1 Number of cases, Day 0 = 1 case", subtitle = "countries > 1000 + Poland, crop at 10000") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include)
ggplot(conf_filtered, aes(days, value, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value), hjust = -.1) +
labs(y="Number of cases", x = "Days from patient 0") +
labs(title = "2.2 Number of cases, Day 0 = 30 cases", subtitle = "countries > 1000 + Poland, crop at 10000") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, value_per_1M, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value_per_1M), hjust = -.1) +
labs(y="Number of cases per 1M inhabitants", x = "Days from patient 0") +
labs(title = "3.1 Number of cases per 1M inhabitans, Day 0 = 1 case", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, value_per_1M, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value_per_1M), hjust = -.1) +
labs(y="Number of cases per 1M inhabitants", x = "Days from patient 0") +
labs(title = "3.2 Number of cases per 1M inhabitans, Day 0 = 30 cases", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -2.5, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of test per 1M inhabitants") +
labs(title = "4.1 Number of cases per 1 test vs tests per 1M inhabitants", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
library(data.table)
library(tidyverse)
url_conf <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"
build_data <- function(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include = c("Poland")){
population <- fread("API_SP.POP.TOTL_DS2_en_csv_v2_866861.csv", header = TRUE) %>%
select(`Country Name`, `2018`) %>%
rename(country = `Country Name`, pop = `2018`) %>%
mutate(pop = pop/1000000)
data_conf <-
fread(url_conf) %>%
melt(., id.vars = c(1,2,3,4)) %>%
mutate (date = as.Date(variable, format = "%m/%d/%y")) %>%
select(-variable) %>%
rename(country = `Country/Region`, province = `Province/State`) %>%
group_by(country, date) %>%
summarize(value = sum(value))
conf_first <-
data_conf %>%
filter(value > START_CASES_NO) %>%
group_by(country) %>%
mutate(maxv = max(value)) %>%
top_n(-1, wt = date) %>%
select(-value) %>%
rename(date_first = date)
tests <- fread("tests.csv", header = TRUE) %>%
mutate(date = as.Date(date, format = "%d.%m.%y"))
conf <-
data_conf %>%
left_join(., conf_first) %>%
mutate(days = date-date_first) %>%
filter(days >=0) %>%
left_join(., population) %>%
mutate(value_per_1M = value/pop) %>%
left_join(., tests) %>%
mutate(tests_per_1M = tests/pop) %>%
mutate(cases_per_test = value/tests) %>%
select(-date, -date_first, -pop)
conf_filtered <-
conf %>%
filter((maxv > MIN_CASES & maxv < MAX_CASES & country != "China") | country %in% countries_include) %>%
filter(value < CHART_MAX) %>%
mutate(maxv = ifelse(value == maxv, 1, 0))
return(conf_filtered)
}
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, log(value), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = log(value)), hjust = -.1) +
labs(y="Log(Number of cases)", x = "Days from patient 0") +
labs(title = "1.1 Log(Number of cases), Day 0 = 1 case", subtitle = "countries > 1000 + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19") +
theme(legend.position="none")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, log(value), colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = log(value)), hjust = -.1) +
labs(y="Log(Number of cases)", x = "Days from patient 0") +
labs(title = "1.2 Log(Number of cases), Day 0 = 30 cases", subtitle = "countries > 1000 + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19") +
theme(legend.position="none")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include)
ggplot(conf_filtered, aes(days, value, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value), hjust = -.1) +
labs(y="Number of cases", x = "Days from patient 0") +
labs(title = "2.1 Number of cases, Day 0 = 1 case", subtitle = "countries > 1000 + Poland, crop at 10000") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = 10000, countries_include)
ggplot(conf_filtered, aes(days, value, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value), hjust = -.1) +
labs(y="Number of cases", x = "Days from patient 0") +
labs(title = "2.2 Number of cases, Day 0 = 30 cases", subtitle = "countries > 1000 + Poland, crop at 10000") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, value_per_1M, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value_per_1M), hjust = -.1) +
labs(y="Number of cases per 1M inhabitants", x = "Days from patient 0") +
labs(title = "3.1 Number of cases per 1M inhabitans, Day 0 = 1 case", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 30, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include)
ggplot(conf_filtered, aes(days, value_per_1M, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered %>% filter(maxv == 1), aes(label = country, colour = country, x = days, y = value_per_1M), hjust = -.1) +
labs(y="Number of cases per 1M inhabitants", x = "Days from patient 0") +
labs(title = "3.2 Number of cases per 1M inhabitans, Day 0 = 30 cases", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "data source: github.com/CSSEGISandData/COVID-19")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -2.5, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of tests per 1M inhabitants") +
labs(title = "4.1 Number of tests per 1M inhabitants vs cases per test", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -0.05, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of tests per 1M inhabitants") +
labs(title = "4.1 Number of tests per 1M inhabitants vs cases per test", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -0.02, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of tests per 1M inhabitants") +
labs(title = "4.1 Number of tests per 1M inhabitants vs cases per test", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
countries_include <- c("Poland")
conf_filtered <- build_data(START_CASES_NO = 1, MIN_CASES = 1000, MAX_CASES = Inf, CHART_MAX = Inf, countries_include) %>%
filter(cases_per_test > 0 & cases_per_test < 250)
ggplot(conf_filtered, aes(tests_per_1M, cases_per_test, colour = country)) +
geom_point() +
geom_line() +
geom_text(data = conf_filtered, aes(label = country, colour = country, x = tests_per_1M, y = cases_per_test), vjust = 0, nudge_y = -0.01, size = 3) +
labs(y="Number of cases per 1 test", x = "Number of tests per 1M inhabitants") +
labs(title = "4.1 Number of tests per 1M inhabitants vs cases per test", subtitle = "countries > 1000 nominal cases + Poland") +
labs(caption = "source: github.com/CSSEGISandData/COVID-19, ourworldindata.org/coronavirus-testing-source-data")
